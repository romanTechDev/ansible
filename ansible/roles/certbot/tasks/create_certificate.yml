---
- name: Создание SSL сертификата
  become: true
  when: certbot_domain_controller = "reg.ru"
  block:
      - name: Установка python3.12-venv
        ansible.builtin.apt:
            state: present
            name:
                - python3.12-venv
            update_cache: true

      - name: Создание виртуального окружения python
        ansible.builtin.shell:
            cmd: |
              set -o pipefail
              python3 -m venv /home/python_home
            executable: /bin/bash
        changed_when: false

      - name: Установка pip certbot-regru
        ansible.builtin.shell:
            cmd: |
              set -o pipefail
              /home/python_home/pip install certbot-regru
            executable: /bin/bash
        changed_when: false


      # - name: Set permissions on regru.ini
      #   ansible.builtin.file:
      #     path: /etc/letsencrypt/regru.ini
      #     mode: '0600'

      # certbot certonly --dry-run -a certbot-regru:dns --installer nginx -d "*.{{ domain }}" -d "{{ domain }}" --pre-hook "service nginx stop" --post-hook "service nginx start"
      # certbot certonly --dry-run -a certbot-regru:dns --installer nginx -d "{{ domain }}" -d "www.{{ domain }}" --pre-hook "service nginx stop" --post-hook "service nginx start"
      
      - name: "Проверка создания сертификата для домена {{ domain }}"
        ansible.builtin.shell:
            cmd: |
              set -o pipefail
              {% if certbot_wildcart_domain %}
                /home/python_home/bin/certbot certonly --dry-run -d "*.{{ domain }}" -d "{{ domain }}"
              {% else %}
                /home/python_home/bin/certbot certonly --dry-run -d "{{ domain }}"
              {% endif %}
            executable: /bin/bash
        changed_when: certbot_test_output.stderr
        ignore_errors: true
        register: certbot_test_output

      - name: Example using fail and when together
        ansible.builtin.fail:
            msg: "{{ certbot_test_output.stderr }}"
        when: certbot_test_output.stderr
